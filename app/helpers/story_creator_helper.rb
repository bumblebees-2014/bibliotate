# require_relative '../config/environment'

module StoryCreatorHelper
  def create(title, author, body, course_id)
  # Create story in database
    story = Story.create(title: title, author: author, course_id: course_id)
  # Paragraphs is an array of paragraphs generated by splitting the body at new lines
    paragraphs = body.split("\n").
  # Removing blank space
    paragraphs.reject! {|line| line.empty?}
  # Make paragraphs
    paragraph_maker(paragraphs, story.id)
  end

  private
  def paragraph_maker(paragraphs, story_id)
    paragraphs.each do |paragraph|
      paragraph_object = Paragraph.create(story_id: story_id)
      sentences = parse_to_sentences(paragraph)
      sentence_maker(sentences, paragraph_object.id)
    end
  end

  def parse_to_sentences(paragraph)
    parser = TactfulTokenizer::Model.new
    parser.tokenize_text(paragraph)
  end

  def sentence_maker(sentences, paragraph_id)
    sentences.each do |sentence|
      Sentence.create!(body: sentence, paragraph_id: paragraph_id)
    end
  end
end



